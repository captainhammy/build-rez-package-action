name: Tests

on:
  - push
  - workflow_dispatch

jobs:
  test:
    runs-on: ubuntu-latest

    container:
      image: captainhammy/hython-runner:20.0

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # Test building a simple package with no variants.
      - name: Build test package
        id: build-test-package
        uses: ./
        with:
          package_root: ./tests/test_install_package
          extra: -- --debug-output

      # Verify the package was built by resolving it and running a command.
      - name: Test resolve
        shell: bash
        run: rez env test_install_package -- echo "resolve successful"

      - name: Validate action output information
        shell: bash
        run: |
          test ${{ steps.build-test-package.outputs.package_name }} = test_install_package
          test ${{ steps.build-test-package.outputs.package_version }} = 0.0.2
          test ${{ steps.build-test-package.outputs.package_variant }} = ""

      # Install some packages that we can use to test building variants based on them.
      - name: Install variant packages
        uses: captainhammy/install-rez-packages-action@v1
        with:
          packages: "six==1.14.0,six==1.15.0"

      # Explicitly build the 0 variant.
      - name: Build test package (variant 0)
        id: build-variant-0
        uses: ./
        with:
          variant: 0
          package_root: ./tests/test_install_package_with_variants

      # Verify the correct variant was built by resolving it via its dependency version.
      - name: Test resolve (variant 0)
        shell: bash
        run: rez env test_install_package_with_variants six-1.14.0 -- echo "resolve successful"

      - name: Validate variant action output information
        shell: bash
        run: |
          test ${{ steps.build-variant-0.outputs.package_name }} = test_install_package_with_variants
          test ${{ steps.build-variant-0.outputs.package_version }} = 0.0.1
          test ${{ steps.build-variant-0.outputs.package_variant }} = 0

      # Build the package without specifying a variant. This will build all the variants.
      - name: Build test package (all variants)
        uses: ./
        with:
          package_root: ./tests/test_install_package_with_variants

      # Verify that variant 1 was built by resolving it via its dependency version.
      - name: Test resolve (variant 1)
        shell: bash
        run: rez env test_install_package_with_variants six-1.15.0 -- echo "resolve successful"

      # Remove the built packages so we can test build again
      - name: Remove built test packages
        shell: bash
        run: |
          rez rm --package test_install_package_with_variants-0.0.1 `rez config local_packages_path`

      # Test building variant 1 by using a request
      - name: Build test package variant by request
        uses: ./
        with:
          package_root: ./tests/test_install_package_with_variants
          variant_from_request: six-1.15

      # Verify that variant 1 was built
      - name: Test resolve (variant 1)
        shell: bash
        run: rez env test_install_package_with_variants six-1.15.0 -- echo "resolve successful"

      - name: Validate action output information
        shell: bash
        run: |
          test ${{ steps.build-variant-0.outputs.package_name }} = test_install_package_with_variants
          test ${{ steps.build-variant-0.outputs.package_version }} = 0.0.1
          test ${{ steps.build-variant-0.outputs.package_variant }} = 1

      # Verify the variant 0 was not built.
      - name: Test resolve (variant 0)
        id: variant-0-not-built
        continue-on-error: true
        shell: bash
        run: rez env test_install_package_with_variants six-1.14.0 -- echo "resolve successful"

      - name: Validate previous step failure
        if: steps.variant-0-not-built.outcome != 'failure'
        run: exit 1
