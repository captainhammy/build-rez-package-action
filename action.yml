name: "Build Rez Package"
description: "Build and install a Rez package locally."
branding:
  icon: "arrow-up-right"
  color: "orange"
inputs:
  variant:
    description: Optional variant number to build
    default: ''
    required: false

  variant_from_request:
    description: Optional package request to determine variant
    default: ''
    required: false

  extra:
    description: Optional extra args to pass to build command.
    default: ''
    required: false

  package_root:
    description: The package root directory (containing the package.py)
    default: '.'
    required: false

  from_git:
    description: Build the package from a git checkout
    default: ''
    required: false

outputs:
  package_name:
    description: The name of the built package.
    value: ${{ steps.set_outputs.outputs.package_name }}

  package_version:
    description: The version of the built package.
    value: ${{ steps.set_outputs.outputs.package_version }}

  package_variant:
    description: The variant number, if any, of the built package.
    value: ${{ steps.set_outputs.outputs.package_variant }}

runs:

  using: "composite"

  steps:
    - id: install_deps
      name: Install Dependencies
      shell: bash
      run: python3 -m pip install -r requirements.txt

    - id: get_package_root
      name: Get Package Root
      shell: bash
      run: |
        python ${GITHUB_ACTION_PATH}/get_package_root.py ${{ inputs.package_root }} ${{ inputs.from_git || '""' }}

    - id: determine_variant
      name: Determine variant
      shell: bash
      run: |
        cd ${{ steps.get_package_root.outputs.package_root }}
        rez python ${GITHUB_ACTION_PATH}/determine_variant.py ${{ inputs.variant || '""' }} ${{ inputs.variant_from_request || '""'}}

    - name: Build Package
      shell: bash
      run: |
        cd ${{ steps.get_package_root.outputs.package_root }}
        rez build --install ${{ steps.determine_variant.outputs.has_variant == 1 && format('--variant {0}', steps.determine_variant.outputs.variant_index) || '' }} ${{ inputs.extra != '' && format('{0}', inputs.extra) || '' }}

    - name: Set Outputs
      id: set_outputs
      shell: bash
      run: |
        cd ${{ steps.get_package_root.outputs.package_root }}
        rez python ${GITHUB_ACTION_PATH}/get_package_info.py ${{ steps.determine_variant.outputs.has_variant == 1 && format('--variant {0}', steps.determine_variant.outputs.variant_index) || '' }}
